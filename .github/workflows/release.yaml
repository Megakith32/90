name: release

on:
  push:
    tags:
      - '**'

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [amd64]
        cmake-arch: [x86_64]
        include:
          - os: macOS-latest
            arch: x86_64
            cmake-arch: x86_64
          - os: macOS-latest
            arch: aarch64
            cmake-arch: arm64
          # TODO: build on 'windows-latest'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Build native library (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cp -a . ../zipline-dockerbuild
          docker run \
            --volume `pwd`/../zipline-dockerbuild:/zipline \
            amd64/centos:7 \
            /zipline/.github/workflows/build-linux-amd64.sh
          mkdir -p zipline/src/jvmMain/resources/jni/amd64
          cp -v ../zipline-dockerbuild/build/jni/amd64/libquickjs.* zipline/src/jvmMain/resources/jni/amd64/

      - name: Build native library (macOS)
        if: matrix.os == 'macOS-latest'
        run: |
          mkdir -p build/jni/${{ matrix.arch }}/
          mkdir -p zipline/src/jvmMain/resources/jni/${{ matrix.arch }}/
          cmake -S zipline/src/jvmMain/ -B build/jni/${{ matrix.arch }}/ \
            -DQUICKJS_VERSION="$(cat zipline/native/quickjs/VERSION)" \
            -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.cmake-arch }}
          cmake --build build/jni/${{ matrix.arch }}/ --verbose
          cp -v build/jni/${{ matrix.arch }}/libquickjs.* zipline/src/jvmMain/resources/jni/${{ matrix.arch }}/

      # Build unless this is a cross-compile.
      - run: ./gradlew build --stacktrace
        if: matrix.arch == 'amd64' || matrix.arch == 'x86_64'

      - uses: actions/upload-artifact@v3
        with:
          name: jvm-native-libraries
          path: zipline/src/jvmMain/resources/*
          if-no-files-found: error

  android-emulator:
    # We build on a Mac to get hardware acceleration for the Android emulator.
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - run: ./gradlew assembleAndroidTest

      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

  publish:
    runs-on: macos-latest
    needs:
      - build
      - android-emulator

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - uses: actions/download-artifact@v3
      - run: |
          mkdir -p zipline/src/jvmMain/resources/
          cp -av jvm-native-libraries/* zipline/src/jvmMain/resources/

      - run: ./gradlew assemble dokkaHtml

      - uses: actions/upload-artifact@v3
        with:
          name: zipline-jvm.jar
          path: zipline/build/libs/zipline-jvm-*.jar
          if-no-files-found: error

      - uses: actions/upload-artifact@v3
        with:
          name: zipline-android.aar
          path: zipline/build/outputs/aar/*-release.aar
          if-no-files-found: error

      - run: ./gradlew publish
        if: ${{ github.ref == 'refs/heads/trunk' && github.repository == 'cashapp/zipline' }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}

      - uses: ffurrer2/extract-release-notes@v1
        id: release_notes

      - uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.release_notes.outputs.release_notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs to website
        if: ${{ github.ref == 'refs/heads/trunk' && github.repository == 'cashapp/zipline' }}
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: site
          FOLDER: zipline/build/dokka/html
          TARGET_FOLDER: docs/0.x/
          CLEAN: true
