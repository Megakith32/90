name: release

on:
  push:
    tags:
      - '**'

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  jvm:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
          # TODO: build on 'windows-latest'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      # Clang is seemingly already installed on Ubuntu but fails to build the project with errors
      # like "file not found" for `#include <string>`. Explicitly (re?)installing fixes things.
      - run: sudo apt-get install clang
        if: matrix.os == 'ubuntu-latest'

      - name: Build native library
        run: |
          cmake -S quickjs/src/jvmMain/ -B build/jni/ -DQUICKJS_VERSION="$(cat quickjs/src/native/quickjs/VERSION)"
          cmake --build build/jni/ --verbose
          mkdir -p quickjs/src/jvmMain/resources/
          cp -v build/jni/libquickjs.* quickjs/src/jvmMain/resources/

      - run: ./gradlew build

      - uses: actions/upload-artifact@v2
        with:
          name: jvm-native-libraries
          path: quickjs/src/jvmMain/resources/*
          if-no-files-found: error

  android:
    # We build on a Mac to get hardware acceleration for the Android emulator.
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - run: ./gradlew assembleAndroidTest

      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

  publish:
    runs-on: ubuntu-latest
    needs:
      - jvm
      - android

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - uses: actions/download-artifact@v2
      - run: |
          mkdir -p quickjs/src/jvmMain/resources/
          cp -v jvm-native-libraries/* quickjs/src/jvmMain/resources/

      - run: ./gradlew assemble dokkaHtml

      - uses: actions/upload-artifact@v2
        with:
          name: quickjs-jvm.jar
          path: quickjs/build/libs/quickjs-jvm-*.jar
          if-no-files-found: error

      - uses: actions/upload-artifact@v2
        with:
          name: quickjs-android.aar
          path: quickjs/build/outputs/aar/*-release.aar
          if-no-files-found: error

      - run: ./gradlew publish
        env:
          ORG_GRADLE_PROJECT_SONATYPE_NEXUS_USERNAME: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_SONATYPE_NEXUS_PASSWORD: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}

      - uses: ffurrer2/extract-release-notes@v1
        id: release_notes

      - uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.release_notes.outputs.release_notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs to website
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: site
          FOLDER: quickjs/build/dokka/html
          TARGET_FOLDER: docs/0.x/
          CLEAN: true
