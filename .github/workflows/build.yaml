name: build

on:
  pull_request: {}
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
          # TODO: build on 'windows-latest'

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      # Clang is seemingly already installed on Ubuntu but fails to build the project with errors
      # like "file not found" for `#include <string>`. Explicitly (re?)installing fixes things.
      - run: sudo apt-get install clang
        if: matrix.os == 'ubuntu-latest'

      - name: Build native library
        run: |
          cmake -S zipline-library/zipline/src/jvmMain/ -B build/jni/ -DQUICKJS_VERSION="$(cat zipline-library/zipline/native/quickjs/VERSION)"
          cmake --build build/jni/ --verbose
          mkdir -p zipline-library/zipline/src/jvmMain/resources/
          cp -v build/jni/libquickjs.* zipline-library/zipline/src/jvmMain/resources/

      - run: ./gradlew build

      - uses: actions/upload-artifact@v2
        with:
          name: jvm-native-libraries
          path: zipline-library/zipline/src/jvmMain/resources/*
          if-no-files-found: error

  android-emulator:
    # We build on a Mac to get hardware acceleration for the Android emulator.
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - run: ./gradlew assembleAndroidTest

      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
      - android-emulator

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - uses: actions/download-artifact@v2
      - run: |
          mkdir -p zipline-library/zipline/src/jvmMain/resources/
          cp -v jvm-native-libraries/* zipline-library/zipline/src/jvmMain/resources/

      - run: ./gradlew assemble dokkaHtml

      - uses: actions/upload-artifact@v2
        with:
          name: zipline-jvm.jar
          path: zipline-library/zipline/build/libs/zipline-jvm-*.jar
          if-no-files-found: error

      - uses: actions/upload-artifact@v2
        with:
          name: zipline-android.aar
          path: zipline-library/zipline/build/outputs/aar/*-release.aar
          if-no-files-found: error

      - run: ./gradlew publish
        if: ${{ github.ref == 'refs/heads/trunk' && github.repository == 'cashapp/zipline' }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}

      - name: Deploy docs to website
        if: ${{ github.ref == 'refs/heads/trunk' && github.repository == 'cashapp/zipline' }}
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: site
          FOLDER: zipline-library/zipline/build/dokka/html
          TARGET_FOLDER: docs/latest/
          CLEAN: true
