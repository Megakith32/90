/*
 * Copyright (C) 2021 Square, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package app.cash.zipline.gradle

import java.io.File
import javax.inject.Inject
import org.gradle.api.DefaultTask
import org.gradle.api.file.DirectoryProperty
import org.gradle.api.model.ObjectFactory
import org.gradle.api.tasks.InputDirectory
import org.gradle.api.tasks.OutputDirectory
import org.gradle.api.tasks.OutputFile
import org.gradle.api.tasks.TaskAction

/**
 * Compiles `.js` files to `.zipline` files.
 *
 * This also writes a Webpack configuration file `webpack.config.d/zipline.js`. in the directory
 * required by the Kotlin Gradle plugin.
 *
 * https://kotlinlang.org/docs/js-project-setup.html#webpack-configuration-file
 * https://webpack.js.org/concepts/configuration/
 */
abstract class ZiplineCompileTask @Inject constructor(
  objectFactory: ObjectFactory
) : DefaultTask() {
  // TODO handle incremental and skip the quickjs compile when incremental
  // https://docs.gradle.org/current/userguide/custom_tasks.html#incremental_tasks
  // https://docs.gradle.org/current/userguide/lazy_configuration.html#working_with_files_in_lazy_properties
  // @get:Incremental
  @get:InputDirectory
  val inputDir: DirectoryProperty = objectFactory.directoryProperty()

  @get:OutputDirectory
  val outputDir: DirectoryProperty = objectFactory.directoryProperty()

  var mainFunction: String? = null

  @get:OutputFile
  val webpackConfigFile: File by lazy {
    project.projectDir.resolve(configFilePath)
  }

  @TaskAction
  fun task() {
    val inputDirFile = inputDir.get().asFile
    val outputDirFile = outputDir.get().asFile
    ZiplineCompiler.compile(inputDirFile, outputDirFile, mainFunction)

    val webpackHome = project.rootProject.buildDir.resolve("js/packages/placeholder-name")
    val directory = outputDirFile.relativeTo(webpackHome)
    webpackConfigFile.parentFile.mkdirs()
    webpackConfigFile.writeText(
      """
      |// DO NOT EDIT.
      |//
      |// This file is generated by the Zipline Gradle plugin. You may ignore it
      |// by adding this line to your .gitignore:
      |//
      |// generated-zipline-webpack-config.js
      |//
      |//
      |if (config.devServer) {
      |  // Accept calls from any device. Typically this is a phone on the same WiFi network.
      |  config.devServer.host = "0.0.0.0";
      |
      |  // Don't inject served JavaScript with live reloading features.
      |  config.devServer.liveReload = false;
      |  config.devServer.hot = false;
      |  config.devServer.client = false;
      |
      |  // Don't open Chrome.
      |  delete config.devServer.open;
      |
      |  // Serve .zipline files. Note that the directory changes for development vs. production.
      |  config.devServer.static.push('$directory');
      |}
      """.trimMargin()
    )
  }

  companion object {
    const val configFilePath = "webpack.config.d/generated-zipline-webpack-config.js"
  }
}
